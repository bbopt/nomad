# All actions have a name that will be displayed in the "Actions" page in GitHub.
name: CI

# Controls when the action will run.
on:
  push:
    branches: [master, develop]
  pull_request:
    types: [opened, synchronize, reopened]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "nomad"
  nomad:
    # The type of runner that the job will run on
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
        - {
            name: "Windows--MSVC", artifact: "Windows-MSVC.tar.xz",
            os: windows-latest,
            build_type: "Release", cc: "cl", cxx: "cl",
            environment_script: "C:/Program Files/Microsoft Visual Studio/2022/Enterprise/VC/Auxiliary/Build/vcvars64.bat",
            python-version: 3.9
          }
        - {
            name: "Windows--MinGW", artifact: "Windows-MinGW.tar.xz",
            os: windows-latest,
            build_type: "Release", cc: "x86_64-w64-mingw32-gcc", cxx: "x86_64-w64-mingw32-g++",
            python-version: 3.9
          }
        - {
            name: "Ubuntu", artifact: "Linux.tar.xz",
            os: ubuntu-latest,
            build_type: "Release", cc: "gcc", cxx: "g++",
            python-version: 3.9
          }
        - {
            name: "MacOS", artifact: "macOS.tar.xz",
            os: macos-latest,
            build_type: "Release", cc: "clang", cxx: "clang++",
            python-version: 3.9 
          }
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      # Usually this is always needed
      - uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.config.python-version }} x64
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.config.python-version }}
          architecture: x64 

      - name: Install Python package dependencies
        run: pip install cython wheel

      - name: Install dependencies for building on Windows
        if: startsWith(matrix.config.name, 'Windows')
        run: |
          choco install cmake
          cmake --version
          python --version

      - name: Install dependencies for building on Ubuntu
        if: startsWith(matrix.config.name, 'Ubuntu')
        run: |
          sudo apt-get update
          sudo apt-get install cmake
          cmake --version
          python --version

      - name: Install dependencies for building on MacOS
        if: startsWith(matrix.config.name, 'MacOS')
        run: |
          brew install cmake
          cmake --version
          python --version

      - name: Configure
        shell: bash
        run: |
          mkdir instdir
          mkdir build
          cd build
          if [[ "${{matrix.config.name}}" == "Windows--MinGW" ]]; then
            cmake -G "MinGW Makefiles" \
              -DTEST_OPENMP=OFF \
              -DBUILD_INTERFACE_C=ON \
              -DCMAKE_INSTALL_PREFIX=../instdir \
              ..
          else
            cmake \
              -DTEST_OPENMP=OFF \
              -DBUILD_INTERFACE_C=ON \
              -DBUILD_INTERFACE_PYTHON=ON \
              -DCMAKE_INSTALL_PREFIX=../instdir \
              ..
          fi

      - name: Build
        shell: bash
        run: |
          cmake --build build --config ${{matrix.config.build_type}}

      - name: Install
        shell: bash
        run: |
          cmake --install build --config ${{matrix.config.build_type}}

      - name: Run tests
        shell: bash
        run: |
          export PATH=`pwd`/build/bin:$PATH
          echo $PATH
          cd build
          ctest -C ${{matrix.config.build_type}} --output-on-failure

      - name: Prepare upload
        shell: bash
        run: |
          mv README.txt instdir/.
          mv LICENSE instdir/.
          mv interfaces/PyNomad/dist instdir/.
          cd instdir
          tar -cf NOMAD4.tar *

      - name: Upload 
        uses: actions/upload-artifact@v3
        with:
          name: ${{matrix.config.name}}
          path:  instdir/NOMAD4.tar
     