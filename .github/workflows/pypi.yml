name: Build and publish binary wheels onto PyPi

on:
  workflow_dispatch:

jobs:

  build:
    strategy:
      fail-fast: false
      matrix:
        target:
          - name: Windows
            os: windows-latest
            archs: AMD64
            msvc: 1
            openmp: 'TRUE'

          - name: Ubuntu
            os: ubuntu-latest
            archs: x86_64
            openmp: 'TRUE'

          - name: macOS_X86
            os: macos-latest
            archs: x86_64
            extra_option: -DCMAKE_OSX_ARCHITECTURES=x86_64
            openmp: 'FALSE'

          - name: macOS_ARM
            os: macos-latest
            archs: arm64
            extra_option: -DCMAKE_OSX_ARCHITECTURES=arm64
            openm: 'FALSE'

    name: Wheels for ${{ matrix.target.name }}
    runs-on: ${{ matrix.target.os }}

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Prepare Python environment
        run: >-
          pip install setuptools wheel cython==0.29.* pytest

      - name: Install dependencies on Windows
        if: startsWith(matrix.target.name, 'Windows')
        run: |
          choco install cmake
          cmake --version

      - name: Install dependencies on Ubuntu
        if: startsWith(matrix.target.name, 'Ubuntu')
        run: |
          sudo apt-get update
          sudo apt-get install cmake
          cmake --version
          gcc --version

      - name: Install dependencies on MacOS
        if: startsWith(matrix.target.name, 'macOS')
        run: |
          brew install cmake
          cmake --version

      - name: Build binary wheels
        uses: pypa/cibuildwheel@v2.16.5
        env:
          CIBW_ARCHS: >-
            ${{ matrix.target.archs }}
          CIBW_BEFORE_ALL: >-
            cmake -DBUILD_INTERFACE_PYTHON=ON -DBUILD_EXAMPLES=OFF -DCMAKE_BUILD_TYPE=Release ${{ matrix.target.extra_option }} -S . -B build &&
            cmake --build build --config Release --clean-first --target nomadStatic --parallel 2
          CIBW_ENVIRONMENT: >-
            NOMAD_SRC=../../src
            NOMAD_BUILD_DIR=../../build
            NOMAD_MSVC_FLAG=${{ matrix.target.msvc }}
            NOMAD_MSVC_CONF=Release
            BUILD_OPENMP=${{ matrix.target.openmp }}
          CIBW_PROJECT_REQUIRES_PYTHON: >-
            >=3.8
          CIBW_BUILD_FRONTEND: >-
            build
          CIBW_BUILD_VERBOSITY: >-
            2
          CIBW_SKIP: >-
            pp*
        with:
          output-dir: wheelhouse
          package-dir: interfaces/PyNomad

      - name: Collect wheels for processing
        uses: actions/upload-artifact@v4
        with:
          name: binary-${{ matrix.target.name }}
          path: wheelhouse/*.whl

  # We use pypa/gh-action-pypi-publish to upload the binary wheels onto PyPi.

  pypi-publish:
    name: Publish to PyPi (testing)
    runs-on: ubuntu-latest
    needs: build
    # Specifying a GitHub environment is optional, but strongly encouraged
    environment: master
    permissions:
      # IMPORTANT: this permission is mandatory for trusted publishing
      id-token: write

    steps:
      - name: Collect wheels for publication
        uses: actions/download-artifact@v4
        with:
          pattern: binary-*
          merge-multiple: true
          path: dist

      - name: Publish wheels to PyPi
        uses: pypa/gh-action-pypi-publish@release/v1
